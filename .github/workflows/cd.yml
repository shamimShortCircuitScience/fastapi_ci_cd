name: CD Pipeline

on:
  workflow_run:
    workflows: ["CI Pipeline"]  # Trigger the CD pipeline after the CI pipeline completes
    types:
      - completed

jobs:
  deploy:
    runs-on: self-hosted  # Use your self-hosted runner for this job

    if: github.event.workflow_run.conclusion == 'success'  # Only proceed if the CI pipeline was successful

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}  # Checkout the same branch that triggered this workflow

      # Step 2: Debug the file locations to ensure we're in the right directory
      - name: Debug File Locations
        run: |
          echo "Current directory: $(pwd)"
          ls -al  # List the files to check the presence of the docker-compose.yml file

      # Step 3: Upload docker-compose.yml to EC2
      - name: Upload Docker Compose to EC2
        uses: appleboy/scp-action@master
        with:
          host: 52.91.98.167  # Your EC2 instance's IP
          username: ubuntu  # EC2's default user
          key: ${{ secrets.EC2_KEY }}  # GitHub secret for the EC2 SSH private key
          port: 22
          source: ./docker-compose.yml  # Path to docker-compose.yml on the self-hosted runner
          target: /home/ubuntu/  # Target path on your EC2 instance

      # Step 4: Debug files on EC2 to ensure docker-compose.yml is correctly uploaded
      - name: Check Files on EC2
        uses: appleboy/ssh-action@master
        with:
          host: 52.91.98.167  # Your EC2 instance's IP
          username: ubuntu  # EC2's default user
          key: ${{ secrets.EC2_KEY }}  # GitHub secret for the EC2 SSH private key
          port: 22
          script: |
            echo "Checking files on EC2:"
            ls -al /home/ubuntu/  # List the files in the target directory to verify upload

      # Step 5: Deploy Application on EC2 using Docker Compose
      - name: Deploy Application on EC2
        uses: appleboy/ssh-action@master
        with:
          host: 52.91.98.167  # Your EC2 instance's IP
          username: ubuntu  # EC2's default user
          key: ${{ secrets.EC2_KEY }}  # GitHub secret for the EC2 SSH private key
          port: 22
          script: |
            echo "Starting Docker Compose on EC2..."
            cd /home/ubuntu/
            docker-compose down  # Bring down any existing containers
            docker-compose up -d  # Bring up the containers in detached mode

